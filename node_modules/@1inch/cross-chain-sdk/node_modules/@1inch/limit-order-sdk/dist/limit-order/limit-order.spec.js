"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const limit_order_1 = require("./limit-order");
const extension_builder_1 = require("./extension-builder");
const maker_traits_1 = require("./maker-traits");
const address_1 = require("../address");
describe('Limit Order', () => {
    jest.spyOn(Math, 'random').mockReturnValue(1);
    jest.spyOn(Date, 'now').mockReturnValue(1673549418040);
    it('should create limit order', () => {
        const order = new limit_order_1.LimitOrder({
            makerAsset: new address_1.Address('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'),
            takerAsset: new address_1.Address('0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'),
            makingAmount: 1000000000000000000n,
            takingAmount: 1420000000n,
            maker: new address_1.Address('0x00000000219ab540356cbb839cbe05303d7705fa')
        });
        expect(limit_order_1.LimitOrder.fromCalldata(order.toCalldata())).toEqual(order);
    });
    it('should create limit order with passed salt', () => {
        const order = new limit_order_1.LimitOrder({
            makerAsset: new address_1.Address('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'),
            takerAsset: new address_1.Address('0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'),
            makingAmount: 1000000000000000000n,
            takingAmount: 1420000000n,
            maker: new address_1.Address('0x00000000219ab540356cbb839cbe05303d7705fa'),
            salt: 10n
        });
        expect(limit_order_1.LimitOrder.fromCalldata(order.toCalldata())).toEqual(order);
    });
    it('should create limit order with extension and salt', () => {
        const ext = new extension_builder_1.ExtensionBuilder().withCustomData('0xdeadbeef').build();
        const order = new limit_order_1.LimitOrder({
            makerAsset: new address_1.Address('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'),
            takerAsset: new address_1.Address('0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'),
            makingAmount: 1000000000000000000n,
            takingAmount: 1420000000n,
            maker: new address_1.Address('0x00000000219ab540356cbb839cbe05303d7705fa'),
            salt: limit_order_1.LimitOrder.buildSalt(ext)
        }, maker_traits_1.MakerTraits.default(), ext);
        expect(limit_order_1.LimitOrder.fromDataAndExtension(order.build(), ext)).toEqual(order);
    });
});
//# sourceMappingURL=limit-order.spec.js.map