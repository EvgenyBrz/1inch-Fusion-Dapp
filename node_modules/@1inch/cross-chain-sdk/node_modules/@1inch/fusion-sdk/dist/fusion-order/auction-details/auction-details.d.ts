import { Extension } from '@1inch/limit-order-sdk';
import { AuctionGasCostInfo, AuctionPoint } from './types';
export declare class AuctionDetails {
    readonly startTime: bigint;
    readonly duration: bigint;
    readonly initialRateBump: bigint;
    readonly points: AuctionPoint[];
    readonly gasCost: {
        /**
         * Rate bump to cover gas price. 10_000_000 means 100%
         */
        gasBumpEstimate: bigint;
        /**
         * Gas price at estimation time. 1000 means 1 Gwei
         */
        gasPriceEstimate: bigint;
    };
    constructor(auction: {
        startTime: bigint;
        /**
         * It defined as a ratio of startTakingAmount to endTakingAmount. 10_000_000 means 100%
         *
         * @see `AuctionCalculator.calcInitialRateBump`
         */
        initialRateBump: number;
        duration: bigint;
        points: AuctionPoint[];
        /**
         * Allows to scale estimate gas costs to actual gas costs
         */
        gasCost?: AuctionGasCostInfo;
    });
    /**
     * Construct `AuctionDetails` from bytes
     *
     * @param data bytes with 0x prefix in next format:
     * - uint24 gasBumpEstimate
     * - uint32 gasPriceEstimate
     * - uint32 startTime
     * - uint24 duration
     * - uint24 initialRateBump
     * - [uint24 rate, uint16 delay] * N points
     *
     * All data is tight packed
     *
     * @see AuctionDetails.encode
     */
    static decode(data: string): AuctionDetails;
    static fromExtension(extension: Extension): AuctionDetails;
    /**
     * Serialize auction data to bytes
     */
    encode(): string;
}
